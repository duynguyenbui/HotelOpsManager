generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RoomType {
  id          String   @id @default(cuid())
  name        String
  description String?
  capacity    Int
  price       Float
  rooms       Room[]
  amenities   String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Room {
  id            String        @id @default(cuid())
  roomNumber    String        @unique
  type          RoomType      @relation(fields: [roomTypeId], references: [id])
  roomTypeId    String
  status        RoomStatus    @default(READY)
  floor         Int
  imageUrls     String[]
  transactions  Transaction[]
  dateEffective DateTime      @updatedAt
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Transaction {
  id         String            @id @default(cuid())
  guest      Guest             @relation(fields: [guestId], references: [id])
  guestId    String
  room       Room              @relation(fields: [roomId], references: [id])
  roomId     String
  checkIn    DateTime
  checkOut   DateTime
  status     TransactionStatus @default(PEDNING)
  totalPrice Float
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  staffId    String
  bill       Bill?
}

model Guest {
  id           String        @id @default(cuid())
  firstName    String
  lastName     String
  email        String        @unique
  phone        String?
  address      String?
  identityNo   String?
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Bill {
  id            String        @id @default(cuid())
  transactionId String        @unique
  transaction   Transaction   @relation(fields: [transactionId], references: [id])
  billDate      DateTime      @default(now())
  subtotal      Float
  tax           Float         @default(0.1)
  totalAmount   Float
  paymentMethod PaymentMethod @default(CASH)
  paymentStatus PaymentStatus @default(PENDING)
  notes         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

enum RoomStatus {
  READY
  MAINTENANCE
  CLEANING
}

enum TransactionStatus {
  PEDNING
  CHECKIN
  COMPLETED
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
  BANK_TRANSFER
}

enum PaymentStatus {
  PENDING
  PAID
  REFUNDED
  CANCELLED
}
